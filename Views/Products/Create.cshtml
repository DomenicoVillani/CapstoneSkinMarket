@model CapstoneSkinMarket.Models.Products

<link href="~/Stile/Css/CreateProducts.css" rel="stylesheet" />

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4 class="text-purple-p text-center my-5">Aggiungi un nuovo prodotto!</h4>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group mt-3">
        <div class="d-flex justify-content-center">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
    </div>

    <div class="form-group mt-3">
        <div class="d-flex justify-content-center">
            @Html.LabelFor(model => model.Immagine, htmlAttributes: new { @class = "control-label col-md-2" })
            <input type="file" name="Immagine" class="form-control" />
            @Html.ValidationMessageFor(model => model.Immagine, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mt-3">
        <div class="d-flex justify-content-center">
            @Html.LabelFor(model => model.Descrizione, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mt-3">
        <div class="d-flex justify-content-center">
            @Html.LabelFor(model => model.Prezzo, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Prezzo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Prezzo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mt-3">
        <div class="d-flex justify-content-center">
            <p class="control-label col-md-2">Rarità</p>
            @{
                var raritaOptions = new List<string>
            {
                "Default",
                "Rara",
                "Ultra",
                "Ultra Rara",
                "Rara Segreta",
                "Leggendaria"
            };
            }
            @Html.DropDownListFor(model => model.Rarita, new SelectList(raritaOptions), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Rarita, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group mt-3">
        <div class="d-flex justify-content-center">
            <p class="control-label col-md-2">Gioco</p>
            @Html.DropDownList("GiocoID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GiocoID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="d-flex justify-content-center mt-5">
            <input type="submit" value="Create" class="btn btn-dettagli" />
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
