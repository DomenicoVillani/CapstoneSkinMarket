@model CapstoneSkinMarket.Models.Orders
@{
    ViewBag.Title = "Carrello";
}

<style>
    .cart-sticky-custom {
        position: sticky;
        top: 6rem; /* Se la tua navbar è circa 48px e il font-size di base è 16px */
        z-index: 1010;
    }
</style>

<h2>Carrello</h2>

<div class="row">
    @if (ViewBag.UserCart != null && ViewBag.UserCart.Count > 0)
    {
        <div class="col-9">
            <div class="row">
                @foreach (var item in ViewBag.UserCart)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100">
                            <img src="@item.Products.Immagine" class="card-img-top" alt="Immagine skin">
                            <div class="card-body">
                                <h5 class="card-title">@item.Products.Nome</h5>
                                <p class="card-text">Prezzo: @item.Products.Prezzo €</p>
                                <p class="card-text">Rarità: @item.Products.Rarita</p>
                                <form method="post" action="@Url.Action("AggiornaQuantita", "OrdersProducts")">
                                    <input type="hidden" name="id" value="@item.Products.ArticoloID" />
                                    <div class="btn-group" role="group" aria-label="Quantità">
                                        <button type="submit" name="operazione" value="decrementa" class="btn btn-outline-primary">-</button>
                                        <span class="btn btn-outline-secondary">@item.Quantita</span>
                                        <button type="submit" name="operazione" value="incrementa" class="btn btn-outline-primary">+</button>
                                    </div>
                                </form>
                                <form method="post" action="@Url.Action("RimuoviDallCarrello", "OrdersProducts")">
                                    <input type="hidden" name="articoloId" value="@item.Products.ArticoloID" />
                                    <button type="submit" class="btn btn-danger mt-2">Rimuovi</button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-3">
            <div class="cart-sticky-custom">
                <form method="post" action="@Url.Action("CreateOrderFromCart", "OrdersProducts")">
                    @Html.AntiForgeryToken()
                    <div class="form-group">
                        <label for="note">Note:</label>
                        <textarea class="form-control" id="note" name="Note" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome)
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Cognome)
                        @Html.EditorFor(model => model.Cognome, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IndirizzoCasa)
                        @Html.EditorFor(model => model.IndirizzoCasa, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IndirizzoFatturazione)
                        @Html.EditorFor(model => model.IndirizzoFatturazione, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    @if (ViewBag.PagamentoID != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Pagamento.PagamentoID, "Metodo di Pagamento", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("PagamentoID", null, htmlAttributes: new { @class = "form-control", id = "metodoPagamento" })
                                @Html.ValidationMessageFor(model => model.Pagamento.PagamentoID, "", new { @class = "text-danger" })
                            </div>
                            <!-- Form Dati Carta di Credito -->
                            <div id="datiCarta">
                                <div class="form-group">
                                    <label for="numeroCarta">Numero Carta:</label>
                                    <input type="text" class="form-control" id="numeroCarta" name="NumeroCarta">
                                </div>
                                <div class="form-group">
                                    <label for="scadenzaCarta">Data di Scadenza:</label>
                                    <input type="text" class="form-control" id="scadenzaCarta" name="DataScadenza" placeholder="MM/YY">
                                </div>
                                <div class="form-group">
                                    <label for="cvvCarta">CVV:</label>
                                    <input type="text" class="form-control" id="cvvCarta" name="CVV" maxlength="3">
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <p>Nessun metodo di pagamento disponibile. Si prega di contattare l'amministrazione.</p>
                    }
                    <input type="hidden" name="OrdineID" value="0" />
                    <input type="hidden" name="TotalePrezzo" value="0" />
                    <input type="hidden" name="DataOrdine" value="@DateTime.Today.ToShortDateString()" />
                    <div class="d-flex mt-3">
                        <button type="submit" class="btn btn-success">Conferma Ordine</button>
                    </div>
                </form>
                <form method="post" action="@Url.Action("SvuotaCarrello", "OrdersProducts")">
                    <input type="submit" value="Svuota carrello" class="btn btn-danger mb-4" />
                </form>
            </div>
        </div>
    }
    else
    {
        <div class="col-md-12">
            <p>Il carrello è vuoto</p>
        </div>
    }
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('#metodoPagamento').change(function () {
            var selectedMethod = $(this).val();
            if (selectedMethod == "1") { // Assumendo che "1" sia l'ID per "Carta di Credito"
                $('#datiCarta').show();
            } else {
                $('#datiCarta').hide();
            }
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var input = document.getElementById('scadenzaCarta');

        input.addEventListener('input', function () {
            // Rimuove i caratteri non numerici e non slash
            var value = this.value.replace(/[^0-9\/]/g, '');
            // Blocca l'inserimento di più di un slash
            if ((value.match(/\//g) || []).length > 1) {
                value = value.substring(0, value.length - 1);
            }
            // Assicura che dopo lo slash ci siano solo due cifre
            if (value.indexOf('/') > 0) {
                var parts = value.split('/');
                if (parts[1].length > 2) {
                    parts[1] = parts[1].substring(0, 2);
                }
                value = parts.join('/');
            }
            // Limita la lunghezza dell'input a 5 caratteri (MM/YY)
            if (value.length > 5) {
                value = value.substring(0, 5);
            }
            this.value = value;

            // Verifica la validità del formato finale
            if (!/^(\d{2}\/\d{2})$/.test(value) && value.length === 5) {
                alert("Formato data non valido. Inserire nel formato MM/YY.");
                this.value = ''; // Opzionale: rimuove il valore se non è valido
            }
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var cvvInput = document.getElementById('cvvCarta');
        var cardNumberInput = document.getElementById('numeroCarta');

        cvvInput.addEventListener('input', function () {
            // Permette solo numeri e limita a 3 cifre
            this.value = this.value.replace(/\D/g, '').slice(0, 3);
        });

        cardNumberInput.addEventListener('input', function () {
            // Permette solo numeri e limita a 16 cifre
            this.value = this.value.replace(/\D/g, '').slice(0, 16);
        });
    });
</script>

